{"version":3,"file":"bundle.js","sources":["../src/index.ts"],"sourcesContent":["/**\n * 【类型装饰器】\n * \n * 装饰器本身就是一个【函数】，只能在【类】中使用。可以使用在【类本身、类的成员】上。\n * \n * 装饰器的分类：\n *  类的装饰器\n *  方法装饰器\n *  属性装饰器\n *  访问装饰器\n *  参数装饰器\n */\n\n/**\n * 【1. 类的装饰器】\n *  TS默认不支持类的装饰器，需配置experimentalDecorators:true。\n *  1）给类进行扩展\n *  2）返回子类去重写父类\n * \n * 【一般不会通过装饰器去扩展累的属性和方法，因为扩展后原来没有定义的方法无法直接访问到，需要通过interface、namespace来进行扩展】\n */\n{\n    /***** 给类通过装饰器进行扩展时，扩展后的属性无法提示，需要类型断言。 *****/\n    // 解决：通过interface对类类型扩展。\n    interface Person {\n        run(): void\n    }\n\n    /**\n     * Person类的修饰符【给类扩展：方法/属性】\n     * @param target 类本身\n     */\n    const AnimalClassDecorator = <T extends new (...arg: any) => any>(target: T) => {\n        (target as any).gender = 'woman'; // 静态属性\n        (target as any).getGender = function () {\n            return this.gender; // 静态方法。这里的this是类本身\n        }\n        // 添加实例属性和方法\n        Object.assign(target.prototype, {\n            age: 20,\n            run() {\n                console.log('running...');\n            },\n        });\n    };\n\n    @AnimalClassDecorator\n    class Person { }\n    const person = new Person();\n\n    console.log('age: ', (person as any).age); // interface中没有扩展age属性，此处需要类型断言\n    console.log('run: ', person.run()); // interface扩展了run属性，此处可以直接点出来，无需类型断言\n    console.log('getGender: ', (Person as any).getGender());\n    console.log('person', person);\n}\n{\n    /**\n     * 返回子类去重写父类\n     * @param target 类本身\n     * @returns \n     */\n    function OverrideAnimalDecorator(target: typeof Animal): void | typeof Animal {\n        return class extends target {\n            eat() {\n                console.log('override eat...');\n            }\n        }\n    }\n\n    // 返回子类去重写父类\n    @OverrideAnimalDecorator\n    class Animal {\n        eat() {\n            console.log('animal eat...');\n        }\n    }\n    const animal = new Animal();\n    console.log('animal: ', animal.eat());\n}\n\nconsole.log('----------');\n\n/**\n * 【2. 方法装饰器】\n * 返回类型：MethodDecorator\n */\n{\n    // 方法的装饰器：是否可被枚举【返回类型：MethodDecorator】\n    // function Enum(isEnum: boolean): (target: Animal, propertyKey: 'eat' | 'run', descriptor: TypedPropertyDescriptor<() => void>) => void | TypedPropertyDescriptor<() => void> {\n    function Enum(isEnum: boolean): MethodDecorator {\n        return function (target: object, propertyKey: string | symbol, descriptor: any) {\n            // descriptor.configurable // 属性是否可以删除\n            // descriptor.writable // 是否可被重写\n            // descriptor.value // 当前函数的值\n            descriptor.enumerable = isEnum; // 是否可被重写\n\n            // 【切片编程】\n            const originaVal = descriptor.value;\n            descriptor.value = function () {\n                console.log('prev call...');\n                return originaVal.call(this, ...arguments); // 调用原有方法\n            }\n        }\n    }\n    class Animal {\n        @Enum(true)\n        eat() {\n            console.log('eat...');\n        }\n        @Enum(false)\n        run() {\n            console.log('running...');\n        }\n    }\n\n    const animal = new Animal();\n    console.log('animal: ', animal);\n    animal.eat();\n}\n\nconsole.log('**********************');\n\n/**\n * 【3. 属性装饰器】\n * 不同的ES版本，会有不同的解析。\n */\n{\n    function Upper(isUpper: boolean): PropertyDecorator {\n        return function (target, propertyKey) {\n            /**\n             * 如果在ES2015中设置原型属性，后续赋值的时候会触发原型属性。\n             * 如果在ESNext中，则无法触发。\n             */\n            let val: any;\n            Object.defineProperty(target, propertyKey, {\n                get() {\n                    return isUpper ? val.toUpperCase() : val;\n                },\n                set(newVal) {\n                    val = newVal;\n                }\n            });\n\n        }\n    }\n    class Animal {\n        @Upper(true)\n        public name: string = 'animal';\n        @Upper(false)\n        public gender: string = 'gender';\n    }\n\n    const animal = new Animal();\n    console.log(animal.name); // ANIMAL\n    console.log(animal.gender); // gender\n}\n\nconsole.log('------------------------');\n\n\n/**\n * 【4. 属性装饰器】\n */\n{\n    function ValToUpper(target: any, propertyKey: string, descriptor: any) {        \n        // 拦截set\n        let originalSet = descriptor.set;\n        descriptor.set = function(newVal: string) {\n            console.log(this); // Animal\n            return originalSet.call(this, newVal.toUpperCase());\n        }\n\n        // 拦截get\n        let originalGet = descriptor.get;\n        descriptor.get = function() {\n            return '$' + originalGet.call(this) + '$';\n        }\n    }\n\n    class Animal {\n        private _name!: string;\n\n        @ValToUpper\n        get name() {\n            return this._name;\n        }\n        set name(newVal) {\n            this._name = newVal;\n        }\n    }\n\n    const animal = new Animal();\n    animal.name = 'cuimm';\n    console.log(animal.name);\n}\n\nexport { };"],"names":[],"mappings":"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"}